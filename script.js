const API_KEY='aad3fab1607b552befd9a2ac37e556af';const BASE_URL='https://api.themoviedb.org/3';const IMG_BASE_URL='https://image.tmdb.org/t/p/w500';let currentType='movie';let currentPage=1;let currentSort='popularity.desc';let currentGenre='';let currentYear='';let currentLanguage='';let isLoading=!1;let searchTimeout;function fetchData(page=1){if(isLoading)return;isLoading=!0;showLoading();const url=`${BASE_URL}/discover/${currentType}?api_key=${API_KEY}&page=${page}&sort_by=${currentSort}&with_genres=${currentGenre}&year=${currentYear}&with_original_language=${currentLanguage}`;fetch(url).then(response=>response.json()).then(data=>{displayResults(data.results,page===1);isLoading=!1;hideLoading()}).catch(error=>{console.error('Error:',error);isLoading=!1;hideLoading()})}
function displayResults(results,clearExisting=!0){const contentView=document.getElementById('content-view');if(!contentView)return;if(clearExisting){contentView.innerHTML=''}
results.forEach(item=>{const card=document.createElement('div');card.className='movie-card';const releaseDate=new Date(item.release_date||item.first_air_date);const formattedDate=releaseDate.toLocaleDateString('en-US',{year:'numeric',month:'long',day:'numeric'});const rating=Math.round(item.vote_average*10);card.innerHTML=`
            <img class="movie-poster" src="${IMG_BASE_URL}${item.poster_path}web.p" alt="${item.title || item.name}">
            <div class="movie-info">
                <h2 class="movie-title">${item.title || item.name}</h2>
                <p class="movie-release-date">${formattedDate}</p>
                <div class="movie-overview">${item.overview}</div>
            </div>
            <div class="movie-rating">${rating}%</div>
        `;card.addEventListener('click',()=>navigateToDetail(item.id));contentView.appendChild(card)})}
function navigateToDetail(id){window.location.href=`detail.html?id=${id}&type=${currentType}`}
function showLoading(){const loading=document.getElementById('loading');if(loading)loading.style.display='block'}
function hideLoading(){const loading=document.getElementById('loading');if(loading)loading.style.display='none'}
function search(query){if(query.length<3){hideSearchResults();return}
const url=`${BASE_URL}/search/${currentType}?api_key=${API_KEY}&query=${encodeURIComponent(query)}`;fetch(url).then(response=>response.json()).then(data=>displaySearchResults(data.results)).catch(error=>console.error('Error:',error))}
function displaySearchResults(results){const searchResultsContainer=document.querySelector('.search-results');const searchInput=document.querySelector('#searchInput');searchResultsContainer.innerHTML='';if(searchInput.value.trim()&&results.length>0){results.slice(0,5).forEach(item=>{const resultItem=document.createElement('div');resultItem.className='search-result-item';const releaseYear=new Date(item.release_date||item.first_air_date).getFullYear();resultItem.innerHTML=`
                <img src="${IMG_BASE_URL}${item.poster_path}.web.p" alt="${item.title || item.name}" class="poster">
                <div class="result-info">
                    <h3 class="title">${item.title || item.name}</h3>
                    <span class="year">(${releaseYear})</span>
                </div>
            `;resultItem.addEventListener('click',()=>{navigateToDetail(item.id)});searchResultsContainer.appendChild(resultItem)});searchResultsContainer.style.display='block'}else{searchResultsContainer.style.display='none'}}
const searchInput=document.querySelector('#searchInput');searchInput.addEventListener('input',()=>{if(searchInput.value.trim()===''){document.querySelector('.search-results').style.display='none'}});function fetchGenres(){const url=`${BASE_URL}/genre/${currentType}/list?api_key=${API_KEY}`;fetch(url).then(response=>response.json()).then(data=>populateGenreFilter(data.genres)).catch(error=>console.error('Error:',error))}
function populateGenreFilter(genres){const genreFilter=document.getElementById('genreFilter');if(!genreFilter)return;genreFilter.innerHTML='<option value="">Genre</option>';genres.forEach(genre=>{const option=document.createElement('option');option.value=genre.id;option.textContent=genre.name;genreFilter.appendChild(option)})}
function fetchSortOptions(){const sortOptions=[{value:'popularity.desc',label:'Popularity Descending'},{value:'popularity.asc',label:'Popularity Ascending'},{value:'vote_average.desc',label:'Rating Descending'},{value:'vote_average.asc',label:'Rating Ascending'},{value:'release_date.desc',label:'Release Date Descending'},{value:'release_date.asc',label:'Release Date Ascending'},];const sortFilter=document.getElementById('sortFilter');if(!sortFilter)return;sortOptions.forEach(option=>{const optionElement=document.createElement('option');optionElement.value=option.value;optionElement.textContent=option.label;sortFilter.appendChild(optionElement)})}
function fetchLanguages(){const url=`${BASE_URL}/configuration/languages?api_key=${API_KEY}`;fetch(url).then(response=>response.json()).then(data=>populateLanguageFilter(data)).catch(error=>console.error('Error:',error))}
function populateLanguageFilter(languages){const languageFilter=document.getElementById('languageFilter');if(!languageFilter)return;languages.sort((a,b)=>a.english_name.localeCompare(b.english_name));languageFilter.innerHTML='<option value="">Language</option>';languages.forEach(language=>{const option=document.createElement('option');option.value=language.iso_639_1;option.textContent=language.english_name;languageFilter.appendChild(option)})}
function populateYearFilter(){const yearFilter=document.getElementById('yearFilter');if(!yearFilter)return;const currentYear=new Date().getFullYear();for(let year=currentYear;year>=1900;year--){const option=document.createElement('option');option.value=year;option.textContent=year;yearFilter.appendChild(option)}}
function handleScroll(){if((window.innerHeight+window.scrollY)>=document.body.offsetHeight-500&&!isLoading){currentPage++;fetchData(currentPage)}}
function setActiveToggle(){const movieToggle=document.getElementById('movieToggle');const tvToggle=document.getElementById('tvToggle');if(currentType==='movie'){movieToggle.classList.add('active');tvToggle.classList.remove('active')}else{movieToggle.classList.remove('active');tvToggle.classList.add('active')}}
document.addEventListener('DOMContentLoaded',()=>{const searchInput=document.getElementById('searchInput');const searchButton=document.getElementById('searchButton');const sortFilter=document.getElementById('sortFilter');const genreFilter=document.getElementById('genreFilter');const yearFilter=document.getElementById('yearFilter');const languageFilter=document.getElementById('languageFilter');const movieToggle=document.getElementById('movieToggle');const tvToggle=document.getElementById('tvToggle');if(searchInput&&searchButton){searchInput.addEventListener('input',(e)=>{clearTimeout(searchTimeout);searchTimeout=setTimeout(()=>search(e.target.value),300)});searchButton.addEventListener('click',()=>search(searchInput.value));document.addEventListener('click',(e)=>{if(!e.target.closest('.search-container')){hideSearchResults()}})}
if(sortFilter){sortFilter.addEventListener('change',(e)=>{currentSort=e.target.value;currentPage=1;fetchData()})}
if(genreFilter){genreFilter.addEventListener('change',(e)=>{currentGenre=e.target.value;currentPage=1;fetchData()})}
if(yearFilter){yearFilter.addEventListener('change',(e)=>{currentYear=e.target.value;currentPage=1;fetchData()})}
if(languageFilter){languageFilter.addEventListener('change',(e)=>{currentLanguage=e.target.value;currentPage=1;fetchData()})}
if(movieToggle&&tvToggle){movieToggle.addEventListener('click',(e)=>{e.preventDefault();currentType='movie';currentPage=1;setActiveToggle();fetchGenres();fetchData()});tvToggle.addEventListener('click',(e)=>{e.preventDefault();currentType='tv';currentPage=1;setActiveToggle();fetchGenres();fetchData()})}
setActiveToggle();fetchSortOptions();fetchGenres();fetchLanguages();populateYearFilter();fetchData();window.addEventListener('scroll',handleScroll)});window.onscroll=function(){const button=document.getElementById("backToTopBtn");if(document.body.scrollTop>300||document.documentElement.scrollTop>300){button.style.display="block"}else{button.style.display="none";hideMessageBar()}};function scrollToTop(){window.scrollTo({top:0,behavior:'smooth'});showMessageBar()}
function showMessageBar(){const messageBar=document.getElementById("messageBar");messageBar.style.transform="translate(-50%, 0)";messageBar.style.opacity="1";setTimeout(hideMessageBar,2000)}
function hideMessageBar(){const messageBar=document.getElementById("messageBar");messageBar.style.transform="translate(-50%, 10px)";messageBar.style.opacity="0"}
const button=document.getElementById("backToTopBtn");button.addEventListener("mouseenter",showMessageBar);button.addEventListener("mouseleave",hideMessageBar);if('fetch' in window){const script=document.createElement('script');script.src='modern-script.js';document.head.appendChild(script)}else{const script=document.createElement('script');script.src='legacy-script.js';document.head.appendChild(script)}
function preloadImage(src){const link=document.createElement('link');link.rel='preload';link.href=src;link.as='image';document.head.appendChild(link)}
function addImage(src){preloadImage(src);const img=document.createElement('img');img.src=src;img.alt='Description of the image';img.className='dynamic-image';const container=document.getElementById('image-container');container.appendChild(img)}
const lazyLoadImages=()=>{const images=document.querySelectorAll('img[data-src]');const observer=new IntersectionObserver((entries,observer)=>{entries.forEach(entry=>{if(entry.isIntersecting){const img=entry.target;img.src=img.dataset.src;img.classList.remove('lazy');observer.unobserve(img)}})});images.forEach(image=>observer.observe(image))};function debounce(func,delay){let timeout;return function(...args){clearTimeout(timeout);timeout=setTimeout(()=>func.apply(this,args),delay)}}
function displayResults(results,clearExisting=!0){const contentView=document.getElementById('content-view');if(!contentView)return;const fragment=document.createDocumentFragment();results.forEach(item=>{const card=document.createElement('div');card.className='movie-card';const releaseDate=new Date(item.release_date||item.first_air_date);const formattedDate=releaseDate.toLocaleDateString('en-US',{year:'numeric',month:'long',day:'numeric'});const rating=Math.round(item.vote_average*10);card.innerHTML=`
            <img class="movie-poster" src="${IMG_BASE_URL}${item.poster_path}.webp" data-src="${IMG_BASE_URL}${item.poster_path}" alt="${item.title || item.name}" class="lazy">
            <div class="movie-info">
                <h2 class="movie-title">${item.title || item.name}</h2>
                <p class="movie-release-date">${formattedDate}</p>
                <div class="movie-overview">${item.overview}</div>
            </div>
            <div class="movie-rating">${rating}%</div>
        `;card.addEventListener('click',()=>navigateToDetail(item.id));fragment.appendChild(card)});if(clearExisting){contentView.innerHTML=''}
contentView.appendChild(fragment);lazyLoadImages()}
const API_KEY="aad3fab1607b552befd9a2ac37e556af";const BASE_URL="https://api.themoviedb.org/3";const IMG_BASE_URL="https://image.tmdb.org/t/p/w500";let searchTimeout;let currentType="movie";let currentPage=1;let currentSort="popularity.desc";let currentGenre="";let currentYear="";let currentLanguage="";let isLoading=!1;let hasMoreContent=!0;async function fetchData(page=1){if(isLoading||!hasMoreContent)return;isLoading=!0;showLoading();const url=`${BASE_URL}/discover/${currentType}?api_key=${API_KEY}&page=${page}&sort_by=${currentSort}&with_genres=${currentGenre}&year=${currentYear}&with_original_language=${currentLanguage}`;try{const response=await fetch(url);if(!response.ok){throw new Error("Network response was not ok "+response.statusText)}
const data=await response.json();displayResults(data.results,page===1);hasMoreContent=data.page<data.total_pages;currentPage=data.page}catch(error){console.error("Error:",error);showError("Failed to fetch data. Please try again later.")}finally{isLoading=!1;hideLoading()}}
function displayResults(results,clear=!0){const contentView=document.getElementById("content-view");if(!contentView)return;if(clear){contentView.innerHTML=""}
results.forEach(item=>{const card=document.createElement("div");card.className="movie-card";const releaseDate=new Date(item.release_date||item.first_air_date).toLocaleDateString("en-US",{year:"numeric",month:"long",day:"numeric"});const rating=(item.vote_average).toFixed(1);card.innerHTML=` <img class="movie-poster" src="${IMG_BASE_URL}${item.poster_path}" alt="${item.title || item.name}" loading="lazy"><div class="movie-info"><h2 class="movie-title">${item.title || item.name}</h2><p class="movie-release-date">${releaseDate}</p><div class="movie-overview">${item.overview}</div></div><div class="movie-rating"><span style="margin-left: 5px;">${rating}</span></div>`;card.addEventListener("click",()=>navigateToDetail(item.id));contentView.appendChild(card)})}
function convertToWebP(originalSrc){return originalSrc.replace(/\.(jpg|jpeg|png)$/,'.webp')}
function navigateToDetail(id){window.location.href=`detail.html?id=${id}&type=${currentType}`}
function showLoading(){document.getElementById('loadingIndicator').style.display='block'}
function hideLoading(){document.getElementById('loadingIndicator').style.display='none'}
function showError(message){const errorElement=document.getElementById('errorMessage');errorElement.textContent=message;errorElement.style.display='block'}
function hideError(){document.getElementById('errorMessage').style.display='none'}
async function search(query){if(!query)return;showLoading();hideError();try{const response=await fetch(`${BASE_URL}/search/${currentType}?api_key=${API_KEY}&query=${encodeURIComponent(query)}`);if(!response.ok){throw new Error("Network response was not ok "+response.statusText)}
const data=await response.json();displayResults(data.results,!0);hasMoreContent=data.page<data.total_pages;currentPage=data.page}catch(error){console.error("Error:",error);showError("Failed to perform search. Please try again later.")}finally{hideLoading()}}
function hideSearchResults(){const searchResults=document.querySelector(".search-results");if(searchResults){searchResults.innerHTML=""}}
async function fetchSortOptions(){const sortFilter=document.getElementById("sortFilter");if(!sortFilter)return;const sortOptions=[{value:"popularity.desc",label:"Popularity Descending"},{value:"popularity.asc",label:"Popularity Ascending"},{value:"vote_average.desc",label:"Rating Descending"},{value:"vote_average.asc",label:"Rating Ascending"},{value:"primary_release_date.desc",label:"Release Date Descending"},{value:"primary_release_date.asc",label:"Release Date Ascending"},];sortOptions.forEach(option=>{const optionElement=document.createElement("option");optionElement.value=option.value;optionElement.textContent=option.label;sortFilter.appendChild(optionElement)})}
async function fetchGenres(){const genreFilter=document.getElementById("genreFilter");if(!genreFilter)return;try{const response=await fetch(`${BASE_URL}/genre/${currentType}/list?api_key=${API_KEY}`);if(!response.ok){throw new Error("Network response was not ok "+response.statusText)}
const data=await response.json();genreFilter.innerHTML='<option value="">Genre</option>';data.genres.forEach(genre=>{const option=document.createElement("option");option.value=genre.id;option.textContent=genre.name;genreFilter.appendChild(option)})}catch(error){console.error("Error fetching genres:",error)}}
function populateYearFilter(){const yearFilter=document.getElementById("yearFilter");if(!yearFilter)return;const currentYear=new Date().getFullYear();for(let year=currentYear;year>=1900;year--){const option=document.createElement("option");option.value=year;option.textContent=year;yearFilter.appendChild(option)}}
async function fetchLanguages(){const languageFilter=document.getElementById("languageFilter");if(!languageFilter)return;try{const response=await fetch(`${BASE_URL}/configuration/languages?api_key=${API_KEY}`);if(!response.ok){throw new Error("Network response was not ok "+response.statusText)}
const languages=await response.json();languageFilter.innerHTML='<option value="">Language</option>';languages.forEach(language=>{const option=document.createElement("option");option.value=language.iso_639_1;option.textContent=language.english_name;languageFilter.appendChild(option)})}catch(error){console.error("Error fetching languages:",error)}}
function setActiveToggle(){const movieToggle=document.getElementById("movieToggle");const tvToggle=document.getElementById("tvToggle");if(movieToggle&&tvToggle){movieToggle.classList.toggle("active",currentType==="movie");tvToggle.classList.toggle("active",currentType==="tv")}}
function scrollToTop(){window.scrollTo({top:0,behavior:"smooth"})}
function handleScroll(){const scrollPosition=window.innerHeight+window.scrollY;const bodyHeight=document.body.offsetHeight;const scrollThreshold=bodyHeight-200;if(scrollPosition>=scrollThreshold&&!isLoading&&hasMoreContent){fetchData(currentPage+1)}
const backToTopBtn=document.getElementById("backToTopBtn");if(window.scrollY>300){backToTopBtn.style.display="block"}else{backToTopBtn.style.display="none"}}
document.addEventListener("DOMContentLoaded",()=>{const searchInput=document.getElementById("searchInput");const searchButton=document.getElementById("searchButton");const sortFilter=document.getElementById("sortFilter");const genreFilter=document.getElementById("genreFilter");const yearFilter=document.getElementById("yearFilter");const languageFilter=document.getElementById("languageFilter");const movieToggle=document.getElementById("movieToggle");const tvToggle=document.getElementById("tvToggle");if(searchInput&&searchButton){searchInput.addEventListener("input",event=>{clearTimeout(searchTimeout);searchTimeout=setTimeout(()=>search(event.target.value),300)});searchButton.addEventListener("click",()=>search(searchInput.value));document.addEventListener("click",event=>{if(!event.target.closest(".search-container")){hideSearchResults()}})}
if(sortFilter){sortFilter.addEventListener("change",event=>{currentSort=event.target.value;currentPage=1;hasMoreContent=!0;fetchData()})}
if(genreFilter){genreFilter.addEventListener("change",event=>{currentGenre=event.target.value;currentPage=1;hasMoreContent=!0;fetchData()})}
if(yearFilter){yearFilter.addEventListener("change",event=>{currentYear=event.target.value;currentPage=1;hasMoreContent=!0;fetchData()})}
if(languageFilter){languageFilter.addEventListener("change",event=>{currentLanguage=event.target.value;currentPage=1;hasMoreContent=!0;fetchData()})}
if(movieToggle&&tvToggle){movieToggle.addEventListener("click",event=>{event.preventDefault();currentType="movie";currentPage=1;hasMoreContent=!0;setActiveToggle();fetchGenres();fetchData()});tvToggle.addEventListener("click",event=>{event.preventDefault();currentType="tv";currentPage=1;hasMoreContent=!0;setActiveToggle();fetchGenres();fetchData()})}
function setActiveToggle(){const movieToggle=document.getElementById("movieToggle");const tvToggle=document.getElementById("tvToggle");const indicator=document.querySelector(".indicator");if(currentType==="movie"){movieToggle.classList.add("active");tvToggle.classList.remove("active");indicator.style.transform="translateX(0)"}else{movieToggle.classList.remove("active");tvToggle.classList.add("active");indicator.style.transform="translateX(100%)"}}
setActiveToggle();fetchSortOptions();fetchGenres();fetchLanguages();populateYearFilter();fetchData();window.addEventListener('scroll',handleScroll)})